{"version":3,"sources":["services/consult.js","services/firebaseKey.js","components/container-cards/container-card.js","services/subirData/updateData.js","components/envioData/data-checkbox/data-checkbox.js","components/envioData/data-send.js","components/data/data.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getData","StreamSchart","lazy","dataArray","Card","React","memo","params","useState","valor","nombre","vecesprendido","sense","setSense","keyWord","key","useEffect","ref","on","snap","data","val","dataplus","promedio","prom","masinfo","shift","push","className","fallback","num","arrayLol","Link","to","UpdateData","props","console","log","update","state","Input","Nbutton","setNbutton","itsGoing","numberOfGuest","animation","setAnimation","GetD","setGetD","Data","GetdataProps","numero","type","checked","name","value","onChange","evt","target","autoComplete","SendData","nComponents","i","mapInput","map","onSubmit","preventDefault","data-toggle","Datarender","pos","link","setValor","Nsensores","setNsensores","snapshot","ndata","nDatos","temp","child","sensorList","sensores","homepageLocal","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6766aa8.chunk.js","sourcesContent":["\nimport firebase from 'firebase'\nimport {DB_CONFIG} from './firebaseKey'\nimport 'firebase/database'\n\n\nconst config = firebase.initializeApp(DB_CONFIG)\nconst db = config.database()\n\nexport function nValFuntion(){\n    const baseNum = db.ref('quiz').once(\"value\",(snap) =>{\n        const nVal = snap.val()\n        return nVal.nDatos\n    })\n    return {baseNum}\n}\n\nexport default function getData(){\n    return db \n}\n\n","// import firebase from 'firebase'\n\n// var admin = require(\"firebase-admin\");\n\n// var serviceAccount = require(\"../services/key/key.json\");\n\n// admin.initializeApp({\n//     credential: admin.credential.cert(serviceAccount),\n//     databaseURL: \"https://test-java-python.firebaseio.com/\"\n// });\n\n// const db = admin.database();\n\n// export default function getDataFire(){\n//     return(\n//         db.ref('quiz').on(\"value\")\n//         .then((snapshot)=>{\n//             var dataRes = snapshot.value()\n//             return dataRes\n//         })\n//     )\n// }\n\n\nexport const DB_CONFIG = {\n    apiKey: \"AIzaSyC7Sdn3R-fW5KS-2ucCwzpGnB0HYKElHDM\",\n    authDomain: \"test-java-python.firebaseapp.com\",\n    databaseURL: \"https://test-java-python.firebaseio.com\",\n    projectId: \"test-java-python\",\n    storageBucket: \"test-java-python.appspot.com\",\n    messagingSenderId: \"167375922955\",\n    appId: \"1:167375922955:web:6ba473481c885a4da2e40e\"\n} ","import React,{useState, useEffect,lazy,Suspense} from 'react'\n// import Datarender from '../data/data';\n\nimport getData  from '../../services/consult'\nconst StreamSchart = lazy(() => import('./chart/chart'))\n\nvar dataArray = [0,0,0,0,0,0,0,0,0,0]\n\n// const home = 'https://sergiorodp.github.io/Proyecto-instru/'\nconst home = '/Proyecto-instru/'\n\nconst Card = React.memo( function Card({params}){\n\n    const [sense,setSense] = useState({\n        valor : 0,\n        nombre : \"cargando...\",\n        vecesprendido : 0,\n    })\n\n    const keyWord = params.key\n    // console.log(params);\n    \n    useEffect(() => {\n        getData().ref(`quiz/eladc${keyWord}`).on(\"value\",(snap) => {\n            const data = snap.val()\n            const dataplus = {\n                valor : data.valor,\n                promedio : data.prom,\n                nombre : data.nombre,\n                masinfo : `ADC numero ${keyWord}`,\n            }\n            dataArray.shift() \n            dataArray.push( data.valor)\n            // console.log(data);\n            setSense(dataplus);\n        })\n    }, [keyWord])\n\n    return(\n    <div className = \"card\">\n        <div className = \"card-header\">\n    <h2 className = \"aqua\"> SENSOR : {sense.nombre}</h2>\n            </div>\n                <div className = \" card-body\">\n                    <p>Valor: {sense.valor}</p>\n                    <p>promedio: {sense.promedio}</p> \n                    <p>Mas info: {sense.masinfo}</p>\n                    <Suspense fallback = {<p>cargando... </p>}> \n                        <StreamSchart num = {sense.valor} arrayLol = {dataArray}/>\n                    </Suspense>\n                </div>\n            <div className = \"card-footer\">\n                <Link to = {`${home}`}>pagina principal</Link>\n        </div>\n    </div>\n    )\n\n})\nexport default Card;\n","import getData from '../consult'\nimport {useState,useEffect} from 'react'\n\n\nfunction UpdateData(props){\n    // console.log(\"Las prosp de get son\");\n    console.log(props);\n    getData().ref(`Leds/N${props.num}`).update({state : props.state})\n}\n\nfunction GetdataProps(props){\n    \n    const [GetD, setGetD] = useState({state : false})\n\n    console.log(props)\n\n    useEffect(() => {\n        if(props !== 0){\n            getData().ref(`Leds/N${props}`).on(\"value\",snap =>{\n                const Data = snap.val()\n                console.log(Data);\n                setGetD(Data)\n            })\n        }\n        },[props])\n\n    return(GetD.state)\n}\n\nexport {GetdataProps}\nexport default UpdateData","import React,{useState , useEffect} from 'react'\nimport UpdateData,{GetdataProps} from '../../../services/subirData/updateData'\n\nfunction Input(props){\n    \n    const [Nbutton,setNbutton] = useState(0)\n    const [sense,setSense] = useState({itsGoing : '' , numberOfGuest : 1})\n    const [animation,setAnimation] = useState (\"btn-secondary\")\n\n    const getData = GetdataProps(Nbutton);\n\n    useEffect(()=>{\n        console.log(getData);\n        const ani = getData ?  \"btn-danger\":\"btn-success\" \n        setAnimation(ani)\n    },[getData])\n\n    useEffect(() => {\n        setNbutton(props.numero)\n    }, [props.numero])\n\n    const handleInputChange = evt =>{\n        const target = evt.target;\n        const name = target.checked;\n        console.log(name);\n        UpdateData({num: Nbutton, state: name})\n        setSense({itsGoing : name,numberOfGuest : sense.numberOfGuest + 1 })\n        // const animation = target.checked ? \"btn-danger\" : \"btn-success\" \n        // setAnimation(animation)\n    }\n\n    return(\n        <label className = {`btn ${animation} btn-rounded form-check-label`}>\n            <span>ROCIADOR{`${Nbutton}`}</span>\n            <input type=\"checkbox\" checked = {getData} name=\"isGoing\" className=\"form-check-input input-button\" value={sense.itsGoing} onChange={handleInputChange} autoComplete=\"off\"/>\n        </label>\n    )\n}\n\nexport default Input","import React from 'react'\n// import Datarender from '../data/data';\n\n// Components\nimport Input from './data-checkbox/data-checkbox'\n\n\nfunction SendData(props){\n\n    let nComponents = []\n\n    for(let i = 0 ; i < props.num;i++){\n        nComponents[i] = i+1;\n    }\n\n    const handelSubmit = evt =>{\n        evt.preventDefault()\n        console.log(\"ENTRE\");\n    }\n\n    const mapInput = nComponents.map(num =>{\n        return (<Input key = {num} numero = {num}/>)\n    })\n\n    return(\n        <form onSubmit={handelSubmit} className = \"p-1\">\n            <div className=\"btn-group \" data-toggle=\"buttons\">\n                {mapInput}\n            </div>\n        </form>\n    )\n}\nexport default SendData;","import React from 'react'\nimport { useEffect, useState } from 'react'\n\nimport getData from '../../services/consult'\nimport SendData from '../envioData/data-send'\n\nimport { Link } from 'react-router-dom'\n\n// Pagina principal \n\n// const home = 'https://sergiorodp.github.io/Proyecto-instru/'\nconst home ='/Proyecto-instru/'\n\nfunction Datarender(){\n\n    const [valor,setValor] = useState([{nombre : \"Cargando...\", valor : 0 , vecesprendido : 0,pos : 0, link:'/'}]);\n    const [Nsensores,setNsensores] = useState(0)\n\n    useEffect(() => {\n        getData().ref(`quiz`).on(\"value\",(snapshot) => {\n            const data = []\n            const ndata = snapshot.val()\n            setNsensores(ndata.nDatos)\n            for (let i = 0; i < ndata.nDatos; i++){\n                const temp = snapshot.child(`eladc${i+1}`).val()\n                data[i] = { \n                    nombre : temp.nombre,\n                    valor : temp.valor,\n                    prom : temp.prom,\n                    masinfo : \"aca esta la info\",\n                    pos : (i+1), \n                    link : `${home}sensor${i+1}`\n                }\n            }\n            setValor(data)\n        })\n    },[])\n\n    const sensorList = valor.map(sensores => {\n        return (\n            <div key = {sensores.nombre} className = \"card pb-2 pt-2 mr-auto ml-auto\">\n                <div className=\"card-header\">\n                    <h3>{sensores.nombre}</h3>\n                </div>\n                <div className = \"card-body\">\n                    <p className=\"aqua\">valor : {sensores.valor}</p>\n                    <p>prom : {sensores.prom}</p>\n                </div>\n                <div className=\"card-footer\">\n                    <Link to = {sensores.link} className=\"aqua\">más info</Link>\n                </div>\n            </div>\n        )\n    })\n\n    let clase;\n    clase = \"organize-cards\" \n\n    return(    \n    <div className = \"card\">\n        <div className = \"card-header\">\n            <h2 className = \"aqua\">Mediciones</h2>\n        </div>\n        <div className = {`card-body ${clase}`}>\n            {sensorList}\n        </div>\n        <div className = \"card-footer\">\n            <SendData num = {Nsensores}/>\n        </div>\n    </div>\n            \n        \n    )\n} \n\nexport default Datarender\n","import React from 'react';\nimport './App.css';\n\nimport Card from './components/container-cards/container-card'\nimport Datarender from './components/data/data'\n\n// import{ Route } from 'wouter'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nconst homepageLocal = '/Proyecto-instru/'\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <section className=\"App-content col-md-10 offset-md-1\">\n      <Switch>\n        <Route path={`${homepageLocal}sensor:key`} component = {Card} />\n        <Route path = {`${homepageLocal}`} component = {Datarender}/>\n      </Switch>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}